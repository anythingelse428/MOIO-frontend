$amount: 70px;
$ball-size: 30px !default;

@mixin balls() {
	width: $ball-size;
	height: $ball-size;
	border-radius: 100%;
}

@keyframes service-skeleton {
	to {
		background-position-x: -200%;
	}
}


@keyframes ball-triangle-path-1 {
	17% {
		opacity: .25;
	}
	33% {
		opacity: 1;
		transform: translate(calc($amount / 2), -$amount);
	}
	50% {
		opacity: .25;
	}
	66% {
		opacity: 1;
		transform: translate($amount, 0px);
	}
	83% {
		opacity: .25;
	}
	100% {
		opacity: 1;
		transform: translate(0px, 0px);
	}
}

@keyframes ball-triangle-path-2 {
	17% {
		opacity: .25;
	}
	33% {
		opacity: 1;
		transform: translate(calc($amount / 2), $amount);
	}
	50%{
		opacity: .25;
	}
	66% {
		opacity: 1;
		transform: translate(calc(-1 * $amount / 2), $amount);
	}
	83%{
		opacity: .25;
	}
	100% {
		opacity: 1;
		transform: translate(0px, 0px);
	}
}

@keyframes ball-triangle-path-3 {
	17% {
		opacity: .25;
	}
	33% {
		opacity: 1;
		transform: translate(-1 * $amount, 0px);
	}
	50%{
		opacity: .25;
	}
	66% {
		opacity: 1;
		transform: translate(calc(-1 * $amount / 2), -$amount);
	}
	83%{
		opacity: .25;
	}
	100% {
		opacity: 1;
		transform: translate(0px, 0px);
	}
}

@mixin ball-triangle-path($n:3) {
	$animations: ball-triangle-path-1 ball-triangle-path-2 ball-triangle-path-3;
	
	@for $i from 1 through $n {
		> div:nth-child(#{$i}) {
			animation-name: nth($animations, $i);
			animation-duration: 2.2s;
			animation-timing-function: ease-in-out;
			animation-iteration-count: infinite;
		}
	}
}

.loader-item-wrapper {
	position: relative;
	@include ball-triangle-path();
	transform: translate(calc(-1 * $amount / 1.667), calc(-1 * $amount / 1.333));
	
	> div {
		animation-fill-mode: both;
		position: absolute;
		width: $ball-size;
		height: $ball-size;
		border-radius: 100%;
		background: #92C2EE;
		&:nth-of-type(1) {
			top: $amount;
		}
		&:nth-of-type(2) {
			left: calc($amount / 2);
		}
		&:nth-of-type(3) {
			top: $amount;
			left: $amount;
		}
	}
}
